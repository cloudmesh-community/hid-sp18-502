---
swagger: "2.0"
info:
  description: "Rest Service that allows to create and manage VMs on Azure"
  version: "0.0.3"
  title: "Azure REST Service Using Swagger"
  contact:
    name: "Cloudmesh Azure REST service"
  license:
    name: "Apache"
host: "localhost:8080"
basePath: "/cloudmesh/azure"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /resourcegroup/{id}:
    get:
      description: "Returns details of resource group with given name"
      operationId: "get_resource_group_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "name of the resource group"
        required: true
        type: "string"
      responses:
        200:
          description: "Details of resource group of given name"
          schema:
            $ref: "#/definitions/Resourcegroup"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /resourcegroup/create/{id}:
    get:
      description: "Creates new resource group with given name"
      operationId: "create_resource_group_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "name of the resource group"
        required: true
        type: "string"
      responses:
        200:
          description: "Result of resource group creation"
          schema:
            type: "string"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /vm/{id}:
    get:
      description: "Returns details of virtual machine with given name"
      operationId: "get_virtual_machine_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "name of the virtual machine"
        required: true
        type: "string"
      responses:
        200:
          description: "Details of virtual machine of given name"
          schema:
            $ref: "#/definitions/VM"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /vm/create/{id}:
    get:
      description: "Creates new vitual machine with given name"
      operationId: "create_virtual_machine_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "name of the virtual machine"
        required: true
        type: "string"
      responses:
        200:
          description: "Result of virtual machine creation"
          schema:
            type: "string"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /vm/start/{id}:
    get:
      description: "Start vitual machine with given name"
      operationId: "start_virtual_machine_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "name of the virtual machine"
        required: true
        type: "string"
      responses:
        200:
          description: "Result of starting virtual machine"
          schema:
            type: "string"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /vm/stop/{id}:
    get:
      description: "Stop vitual machine with given name"
      operationId: "stop_virtual_machine_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "name of the virtual machine"
        required: true
        type: "string"
      responses:
        200:
          description: "Result of stopping virtual machine"
          schema:
            type: "string"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  Resourcegroup:
    type: "object"
    properties:
      name:
        type: "string"
      tags:
        type: "string"
      id:
        type: "string"
      managed_by:
        type: "string"
      location:
        type: "string"
      properties:
        $ref: "#/definitions/Resourcegroup_properties"
    example:
      managed_by: "managed_by"
      name: "name"
      location: "location"
      id: "id"
      properties:
        provisioningState: "provisioningState"
      tags: "tags"
  VM:
    type: "object"
    properties:
      identity:
        type: "string"
      os_profile:
        $ref: "#/definitions/VM_os_profile"
      storage_profile:
        $ref: "#/definitions/VM_storage_profile"
      name:
        type: "string"
      tags:
        type: "string"
      vm_id:
        type: "string"
      hardware_profile:
        $ref: "#/definitions/VM_hardware_profile"
      provisioning_state:
        type: "string"
      network_profile:
        $ref: "#/definitions/VM_network_profile"
      type:
        type: "string"
      id:
        type: "string"
      location:
        type: "string"
    example:
      provisioning_state: "provisioning_state"
      vm_id: "vm_id"
      identity: "identity"
      hardware_profile:
        vm_size: "vm_size"
      storage_profile:
        image_ref:
          offer: "offer"
          publisher: "publisher"
          sku: "sku"
          version: "version"
      name: "name"
      network_profile:
        network_interface: "network_interface"
      os_profile:
        computer_name: "computer_name"
        admin_username: "admin_username"
        admin_password: "admin_password"
      location: "location"
      id: "id"
      type: "type"
      tags: "tags"
  Resourcegroup_properties:
    properties:
      provisioningState:
        type: "string"
    example:
      provisioningState: "provisioningState"
  VM_os_profile:
    properties:
      computer_name:
        type: "string"
      admin_username:
        type: "string"
      admin_password:
        type: "string"
    example:
      computer_name: "computer_name"
      admin_username: "admin_username"
      admin_password: "admin_password"
  VM_storage_profile_image_ref:
    properties:
      publisher:
        type: "string"
      offer:
        type: "string"
      sku:
        type: "string"
      version:
        type: "string"
    example:
      offer: "offer"
      publisher: "publisher"
      sku: "sku"
      version: "version"
  VM_storage_profile:
    properties:
      image_ref:
        $ref: "#/definitions/VM_storage_profile_image_ref"
    example:
      image_ref:
        offer: "offer"
        publisher: "publisher"
        sku: "sku"
        version: "version"
  VM_hardware_profile:
    properties:
      vm_size:
        type: "string"
    example:
      vm_size: "vm_size"
  VM_network_profile:
    properties:
      network_interface:
        type: "string"
    example:
      network_interface: "network_interface"
