swagger: '2.0'
info:
  version: '1.0'
  title: 'Azure REST Service Using Swagger'
  description: 'Rest Service that allows to create and manage VMs on Azure'
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: 'Cloudmesh Azure REST service'
  license:
    name: 'Apache'

host: 'localhost:8080'
basePath: '/cloudmesh/azure'

schemes:
  - 'http'
consumes:
  - 'application/json'
produces:
  - 'application/json'

paths:
  '/resourcegroups':
    get:
      description: "Returns list of resource group present"
      produces:
        - 'application/json'
      responses:
        "200":
          description: "List of resource groups"
          schema:
            $ref: "#/definitions/Resourcegroup"

  '/resourcegroup/{id}':
    get:
      description: "Returns details of resource group with given name"
      operationId: getResourceGroupById
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: 'name of the resource group'
          required: true
          type: string
      responses:
        '200':
          description: 'Details of resource group of given name'
          schema:
            $ref: '#/definitions/Resourcegroup'

  '/resourcegroup/create/{id}':
    get:
      description: "Creates new resource group with given name"
      operationId: createResourceGroupById
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: 'name of the resource group'
          required: true
          type: string
      responses:
        '200':
          description: 'Result of resource group creation'
          schema:
            type: string

  '/resourcegroup/delete/{id}':
    get:
      description: "Delete resource group with given name"
      operationId: deleteResourceGroupById
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: 'name of the resource group'
          required: true
          type: string
      responses:
        '200':
          description: 'Result of resource group deletion'
          schema:
            type: string

  '/vms/{id}':
    get:
      description: "Returns list of virtual machines present in given
      resource group"
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: 'name of the resource group'
          required: true
          type: string
      responses:
        '200':
          description: 'List of virtual machines'
          schema:
            $ref: '#/definitions/VM'
  '/vm':
    put:
      description: "Returns details of virtual machine with given name"
      operationId: getVirtualMachineById
      produces:
        - 'application/json'
      parameters:
        - name: detail
          in: body
          description: 'name of the virtual machine and resource group'
          required: true
          schema:
            $ref: '#/definitions/detail'
      responses:
        '200':
          description: 'Details of virtual machine of given name'
          schema:
            $ref: '#/definitions/VM'

  '/vm/create':
    put:
      description: "Creates new vitual machine with given name"
      operationId: createVirtualMachineById
      produces:
        - 'application/json'
      parameters:
        - name: detail
          in: body
          description: 'parameters to create VM like nic, IP Address, Image
          reference'
          required: true
          schema:
            $ref: '#/definitions/detail'
      responses:
        '200':
          description: 'Result of virtual machine creation'
          schema:
            type: string

  '/vm/start':
    put:
      description: "Start virtual machine with given name"
      operationId: startVirtualMachineById
      produces:
        - 'application/json'
      parameters:
        - name: detail
          in: body
          description: 'name of the virtual machine and resource group'
          required: true
          schema:
            $ref: '#/definitions/detail'
      responses:
        '200':
          description: 'Result of starting virtual machine'
          schema:
            type: string

  '/vm/stop':
    put:
      description: "Stop virtual machine with given name"
      operationId: stopVirtualMachineById
      produces:
        - 'application/json'
      parameters:
        - name: detail
          in: body
          description: 'name of the virtual machine and resource group'
          required: true
          schema:
            $ref: '#/definitions/detail'
      responses:
        '200':
          description: 'Result of stopping virtual machine'
          schema:
            type: string

  '/ip/create':
    put:
      description: "Creates new IP address with given location"
      operationId: createIPByLocation
      produces:
        - 'application/json'
      parameters:
        - name: detail
          in: body
          description: 'name of IP adress and the location'
          required: true
          schema:
            $ref: '#/definitions/detail'
      responses:
        '200':
          description: 'Result of IP address creation'
          schema:
            type: string

  '/vnet/create':
    put:
      description: "Creates new Vnet with given name"
      operationId: createVnetById
      produces:
        - 'application/json'
      parameters:
        - name: detail
          in: body
          description: 'name of the virtual network'
          required: true
          schema:
            $ref: '#/definitions/detail'
      responses:
        '200':
          description: 'Result of virtual network creation'
          schema:
            type: string

  '/subnet/create':
    put:
      description: "Creates new subnet with given name"
      operationId: createSubnetById
      produces:
        - 'application/json'
      parameters:
        - name: detail
          in: body
          description: 'name of the sub network'
          required: true
          schema:
            $ref: '#/definitions/detail'
      responses:
        '200':
          description: 'Result of sub network creation'
          schema:
            type: string

  '/nic/create':
    put:
      description: "Creates new network interface card with given name"
      operationId: createNicById
      produces:
        - 'application/json'
      parameters:
        - name: detail
          in: body
          description: 'name of the network interface card'
          required: true
          schema:
            $ref: '#/definitions/detail'
      responses:
        '200':
          description: 'Result of network interface card creation'
          schema:
            type: string

  '/datadisk/create':
    put:
      description: "Creates new data disk of given size"
      operationId: createDiskById
      produces:
        - 'application/json'
      parameters:
        - name: detail
          in: body
          description: 'size of new data disk'
          required: true
          schema:
            $ref: '#/definitions/detail'
      responses:
        '200':
          description: 'Name of the new Data disk created'
          schema:
            type: string

definitions:
  Resourcegroup:
    type: "object"
    properties:
      name:
        type: "string"
      tags:
        type: "string"
      id:
        type: "string"
      managed_by:
        type: "string"
      location:
        type: "string"
      properties:
        type: "object"
        properties:
          provisioningState:
            type: "string"

  VM:
    type: "object"
    properties:
      identity:
        type: "string"
      os_profile:
        type: "object"
        properties:
          computer_name:
            type: "string"
          admin_username:
            type: "string"
          admin_password:
            type: "string"
      storage_profile:
        type: "object"
        properties:
          image_ref:
            type: "object"
            properties:
              publisher:
                type: "string"
              offer:
                type: "string"
              sku:
                type: "string"
              version:
                type: "string"
      name:
        type: "string"
      tags:
        type: "string"
      vm_id:
        type: "string"
      hardware_profile:
        type: "object"
        properties:
          vm_size:
            type: "string"
      provisioning_state:
        type: "string"
      network_profile:
        type: "object"
        properties:
          network_interface:
            type: "string"
      type:
        type: "string"
      id:
        type: "string"
      location:
        type: "string"

  detail:
    type: 'object'
    properties:
      group_name:
        type: "string"
      vm_name:
        type: "string"
      location:
        type: "string"
      disk_size:
        type: "string"
      ip_name:
        type: "string"
      vnet_name:
        type: "string"
      subnet_name:
        type: "string"
      nic_name:
        type: "string"
      computer_name:
        type: "string"
      username:
        type: "string"
      password:
        type: "string"
      vm_size:
        type: "string"
      publisher:
        type: "string"
      offer:
        type: "string"
      sku:
        type: "string"
      version:
        type: "string"


