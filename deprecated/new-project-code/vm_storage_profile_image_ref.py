# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class VMStorageProfileImageRef(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, publisher=None, offer=None, sku=None, version=None):  # noqa: E501
        """VMStorageProfileImageRef - a model defined in Swagger

        :param publisher: The publisher of this VMStorageProfileImageRef.  # noqa: E501
        :type publisher: str
        :param offer: The offer of this VMStorageProfileImageRef.  # noqa: E501
        :type offer: str
        :param sku: The sku of this VMStorageProfileImageRef.  # noqa: E501
        :type sku: str
        :param version: The version of this VMStorageProfileImageRef.  # noqa: E501
        :type version: str
        """
        self.swagger_types = {
            'publisher': str,
            'offer': str,
            'sku': str,
            'version': str
        }

        self.attribute_map = {
            'publisher': 'publisher',
            'offer': 'offer',
            'sku': 'sku',
            'version': 'version'
        }

        self._publisher = publisher
        self._offer = offer
        self._sku = sku
        self._version = version

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VM_storage_profile_image_ref of this VMStorageProfileImageRef.  # noqa: E501
        :rtype: VMStorageProfileImageRef
        """
        return util.deserialize_model(dikt, cls)

    @property
    def publisher(self):
        """Gets the publisher of this VMStorageProfileImageRef.


        :return: The publisher of this VMStorageProfileImageRef.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this VMStorageProfileImageRef.


        :param publisher: The publisher of this VMStorageProfileImageRef.
        :type publisher: str
        """

        self._publisher = publisher

    @property
    def offer(self):
        """Gets the offer of this VMStorageProfileImageRef.


        :return: The offer of this VMStorageProfileImageRef.
        :rtype: str
        """
        return self._offer

    @offer.setter
    def offer(self, offer):
        """Sets the offer of this VMStorageProfileImageRef.


        :param offer: The offer of this VMStorageProfileImageRef.
        :type offer: str
        """

        self._offer = offer

    @property
    def sku(self):
        """Gets the sku of this VMStorageProfileImageRef.


        :return: The sku of this VMStorageProfileImageRef.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this VMStorageProfileImageRef.


        :param sku: The sku of this VMStorageProfileImageRef.
        :type sku: str
        """

        self._sku = sku

    @property
    def version(self):
        """Gets the version of this VMStorageProfileImageRef.


        :return: The version of this VMStorageProfileImageRef.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this VMStorageProfileImageRef.


        :param version: The version of this VMStorageProfileImageRef.
        :type version: str
        """

        self._version = version
