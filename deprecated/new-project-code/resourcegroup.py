# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.resourcegroup_properties import ResourcegroupProperties  # noqa: F401,E501
from swagger_server import util


class Resourcegroup(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name=None, tags=None, id=None, managed_by=None, location=None, properties=None):  # noqa: E501
        """Resourcegroup - a model defined in Swagger

        :param name: The name of this Resourcegroup.  # noqa: E501
        :type name: str
        :param tags: The tags of this Resourcegroup.  # noqa: E501
        :type tags: str
        :param id: The id of this Resourcegroup.  # noqa: E501
        :type id: str
        :param managed_by: The managed_by of this Resourcegroup.  # noqa: E501
        :type managed_by: str
        :param location: The location of this Resourcegroup.  # noqa: E501
        :type location: str
        :param properties: The properties of this Resourcegroup.  # noqa: E501
        :type properties: ResourcegroupProperties
        """
        self.swagger_types = {
            'name': str,
            'tags': str,
            'id': str,
            'managed_by': str,
            'location': str,
            'properties': ResourcegroupProperties
        }

        self.attribute_map = {
            'name': 'name',
            'tags': 'tags',
            'id': 'id',
            'managed_by': 'managed_by',
            'location': 'location',
            'properties': 'properties'
        }

        self._name = name
        self._tags = tags
        self._id = id
        self._managed_by = managed_by
        self._location = location
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Resourcegroup of this Resourcegroup.  # noqa: E501
        :rtype: Resourcegroup
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Resourcegroup.


        :return: The name of this Resourcegroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Resourcegroup.


        :param name: The name of this Resourcegroup.
        :type name: str
        """

        self._name = name

    @property
    def tags(self):
        """Gets the tags of this Resourcegroup.


        :return: The tags of this Resourcegroup.
        :rtype: str
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Resourcegroup.


        :param tags: The tags of this Resourcegroup.
        :type tags: str
        """

        self._tags = tags

    @property
    def id(self):
        """Gets the id of this Resourcegroup.


        :return: The id of this Resourcegroup.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Resourcegroup.


        :param id: The id of this Resourcegroup.
        :type id: str
        """

        self._id = id

    @property
    def managed_by(self):
        """Gets the managed_by of this Resourcegroup.


        :return: The managed_by of this Resourcegroup.
        :rtype: str
        """
        return self._managed_by

    @managed_by.setter
    def managed_by(self, managed_by):
        """Sets the managed_by of this Resourcegroup.


        :param managed_by: The managed_by of this Resourcegroup.
        :type managed_by: str
        """

        self._managed_by = managed_by

    @property
    def location(self):
        """Gets the location of this Resourcegroup.


        :return: The location of this Resourcegroup.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Resourcegroup.


        :param location: The location of this Resourcegroup.
        :type location: str
        """

        self._location = location

    @property
    def properties(self):
        """Gets the properties of this Resourcegroup.


        :return: The properties of this Resourcegroup.
        :rtype: ResourcegroupProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this Resourcegroup.


        :param properties: The properties of this Resourcegroup.
        :type properties: ResourcegroupProperties
        """

        self._properties = properties
